'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function () {
    var expandedParentClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    return {
        enter: function enter(el) {
            el._parent = el.parentNode;
            // Get height that is to be scrolled
            el.style.overflow = 'hidden';
            el.style.height = 0;
            expandedParentClass && el._parent.classList.add(expandedParentClass);
            requestAnimationFrame(function () {
                el.style.height = el.scrollHeight ? el.scrollHeight + 'px' : 'auto';
            });
        },
        afterEnter: function afterEnter(el) {
            el.style.overflow = null;
            el.style.height = null;
        },
        leave: function leave(el) {
            // Set height before we transition to 0
            el.style.overflow = 'hidden';
            el.style.height = el.scrollHeight + 'px';
            requestAnimationFrame(function () {
                return el.style.height = 0;
            });
        },
        afterLeave: function afterLeave(el) {
            expandedParentClass && el._parent && el._parent.classList.remove(expandedParentClass);
        }
    };
};
//# sourceMappingURL=expand-transition.js.map